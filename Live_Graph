import json
from dash.dependencies import Output, Input
import dash
from dash import dcc, html
import plotly.graph_objs as go
import random
from collections import deque

X = deque(maxlen=20)
X.append(1)

Y = deque(maxlen=20)
Y.append(100)  # Starting stock price

app = dash.Dash(__name__)

app.layout = html.Div([
    dcc.Graph(id='live-graph', animate=True),
    dcc.Interval(
        id='graph-update',
        interval=1000,
        n_intervals=0
    ),
])

@app.callback(
    Output('live-graph', 'figure'),
    [Input('graph-update', 'n_intervals')]
)
def update_graph_scatter(n):
    # Generate a new price with random fluctuation
    new_price = Y[-1] + Y[-1] * random.uniform(-0.05, 0.05)
    X.append(X[-1] + 1)
    Y.append(new_price)

    # Save the latest data to a JSON file
    data_to_save = {"X": list(X), "Y": list(Y)}
    with open("stock_prices.json", "w") as f:
        json.dump(data_to_save, f)

    data = go.Scatter(
        x=list(X),
        y=list(Y),
        name='Scatter',
        mode='lines+markers'
    )

    y_ticks = [round(y, 2) for y in range(int(min(Y)), int(max(Y)) + 1)]

    return {
        'data': [data],
        'layout': go.Layout(
            xaxis=dict(range=[min(X), max(X)]),
            yaxis=dict(
                range=[min(Y), max(Y)],
                tickvals=y_ticks,
                ticktext=[str(tick) for tick in y_ticks]
            )
        )
    }

if __name__ == '__main__':
    app.run_server(debug=True)
